; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23026.0 

	TITLE	D:\Development\Projects\OptimizationTest\main.cxx
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_04IHNIHLJD@?5?$DO?$DO?$DO?$AA@		; `string'
PUBLIC	??_C@_0L@FNFMFEBM@?$DM?$DM?$DM?5AT?5?5?3?5?$AA@	; `string'
PUBLIC	??_C@_0L@BDIDHNLI@?$DM?$DM?$DM?5RAW?5?3?5?$AA@	; `string'
PUBLIC	??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?test@@3PAVVectorOptimizationTest@@A		; test
EXTRN	__imp_?rdstate@ios_base@std@@QBEHXZ:PROC
EXTRN	__imp_?good@ios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QBEHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QBE_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z:PROC
EXTRN	__imp___invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp____std_terminate:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__rand:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?uncaught_exception@std@@YA_NXZ:PROC
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__imp__memmove:PROC
EXTRN	@__security_check_cookie@4:PROC
?test@@3PAVVectorOptimizationTest@@A DD 01H DUP (?)	; test
_BSS	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
CONST	SEGMENT
??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ DB 'invalid v'
	DB	'ector<T> subscript', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BDIDHNLI@?$DM?$DM?$DM?5RAW?5?3?5?$AA@
CONST	SEGMENT
??_C@_0L@BDIDHNLI@?$DM?$DM?$DM?5RAW?5?3?5?$AA@ DB '<<< RAW : ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FNFMFEBM@?$DM?$DM?$DM?5AT?5?5?3?5?$AA@
CONST	SEGMENT
??_C@_0L@FNFMFEBM@?$DM?$DM?$DM?5AT?5?5?3?5?$AA@ DB '<<< AT  : ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04IHNIHLJD@?5?$DO?$DO?$DO?$AA@
CONST	SEGMENT
??_C@_04IHNIHLJD@?5?$DO?$DO?$DO?$AA@ DB ' >>>', 00H	; `string'
CONST	ENDS
PUBLIC	??$_Uninit_move@PAVSomeClass@@PAV1@PAV1@@std@@YAPAPAVSomeClass@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<SomeClass *,SomeClass *,SomeClass *>
PUBLIC	??$_Val_type@PAPAVSomeClass@@@std@@YAPAPAVSomeClass@@PAPAV1@@Z ; std::_Val_type<SomeClass * *>
PUBLIC	??$_Rechecked@PAPAVSomeClass@@PAPAV1@@std@@YAAAPAPAVSomeClass@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<SomeClass * *,SomeClass * *>
PUBLIC	??$_Uninit_move@PAPAVSomeClass@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@std@@@std@@YAPAPAVSomeClass@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@0@@Z ; std::_Uninit_move<SomeClass * *,SomeClass * *,std::_Wrap_alloc<std::allocator<SomeClass *> > >
PUBLIC	??$_Unchecked@PAPAVSomeClass@@@std@@YAPAPAVSomeClass@@PAPAV1@@Z ; std::_Unchecked<SomeClass * *>
PUBLIC	??$construct@PAVSomeClass@@PAV1@@?$allocator@PAVSomeClass@@@std@@QAEXPAPAVSomeClass@@$$QAPAV2@@Z ; std::allocator<SomeClass *>::construct<SomeClass *,SomeClass *>
PUBLIC	??$_Uninitialized_move@PAPAVSomeClass@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@std@@@std@@YAPAPAVSomeClass@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@0@@Z ; std::_Uninitialized_move<SomeClass * *,SomeClass * *,std::_Wrap_alloc<std::allocator<SomeClass *> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@std@@@std@@YAXPAPAVSomeClass@@0AAU?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<SomeClass *> > >
PUBLIC	??$forward@ABV?$allocator@PAVSomeClass@@@std@@@std@@YAABV?$allocator@PAVSomeClass@@@0@ABV10@@Z ; std::forward<std::allocator<SomeClass *> const &>
PUBLIC	??$construct@PAVSomeClass@@PAV1@@?$allocator_traits@V?$allocator@PAVSomeClass@@@std@@@std@@SAXAAV?$allocator@PAVSomeClass@@@1@PAPAVSomeClass@@$$QAPAV3@@Z ; std::allocator_traits<std::allocator<SomeClass *> >::construct<SomeClass *,SomeClass *>
PUBLIC	??$_Addressof@PAVSomeClass@@@std@@YAPAPAVSomeClass@@AAPAV1@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<SomeClass *>
PUBLIC	??$_Move@PAPAVSomeClass@@PAPAV1@@std@@YAPAPAVSomeClass@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<SomeClass * *,SomeClass * *>
PUBLIC	??$_Ptr_cat@PAVSomeClass@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVSomeClass@@0@Z ; std::_Ptr_cat<SomeClass *,SomeClass *>
PUBLIC	??0?$allocator@PAVSomeClass@@@std@@QAE@ABV01@@Z	; std::allocator<SomeClass *>::allocator<SomeClass *>
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@std@@QAE@ABV?$allocator@PAVSomeClass@@@1@@Z ; std::_Wrap_alloc<std::allocator<SomeClass *> >::_Wrap_alloc<std::allocator<SomeClass *> >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAVSomeClass@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<SomeClass *> >::_Vector_val<std::_Simple_types<SomeClass *> >
PUBLIC	??$_Allocate@PAVSomeClass@@@std@@YAPAPAVSomeClass@@IPAPAV1@_N@Z ; std::_Allocate<SomeClass *>
PUBLIC	??$_Deallocate@PAVSomeClass@@@std@@YAXPAPAVSomeClass@@I@Z ; std::_Deallocate<SomeClass *>
PUBLIC	??$_Umove@PAPAVSomeClass@@@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@IAEPAPAVSomeClass@@PAPAV2@00@Z ; std::vector<SomeClass *,std::allocator<SomeClass *> >::_Umove<SomeClass * *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@std@@@std@@YAXPAPAVSomeClass@@0AAU?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<SomeClass *> > >
PUBLIC	??$?0ABV?$allocator@PAVSomeClass@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVSomeClass@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAVSomeClass@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<SomeClass *> >,std::_Vector_val<std::_Simple_types<SomeClass *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<SomeClass *> >,std::_Vector_val<std::_Simple_types<SomeClass *> >,1><std::allocator<SomeClass *> const &>
PUBLIC	??$construct@PAVSomeClass@@PAV1@@?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@std@@QAEXPAPAVSomeClass@@$$QAPAV2@@Z ; std::_Wrap_alloc<std::allocator<SomeClass *> >::construct<SomeClass *,SomeClass *>
PUBLIC	??$forward@PAVSomeClass@@@std@@YA$$QAPAVSomeClass@@AAPAV1@@Z ; std::forward<SomeClass *>
PUBLIC	??$addressof@PAVSomeClass@@@std@@YAPAPAVSomeClass@@AAPAV1@@Z ; std::addressof<SomeClass *>
PUBLIC	??$_Move@PAPAVSomeClass@@PAPAV1@@std@@YAPAPAVSomeClass@@PAPAV1@00@Z ; std::_Move<SomeClass * *,SomeClass * *>
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	?max_size@?$allocator@PAVSomeClass@@@std@@QBEIXZ ; std::allocator<SomeClass *>::max_size
PUBLIC	?allocate@?$allocator@PAVSomeClass@@@std@@QAEPAPAVSomeClass@@I@Z ; std::allocator<SomeClass *>::allocate
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PAVSomeClass@@@std@@@std@@SAIABV?$allocator@PAVSomeClass@@@2@@Z ; std::allocator_traits<std::allocator<SomeClass *> >::max_size
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVSomeClass@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<SomeClass *> >,std::_Vector_val<std::_Simple_types<SomeClass *> >,1>::_Get_first
PUBLIC	?deallocate@?$allocator@PAVSomeClass@@@std@@QAEXPAPAVSomeClass@@I@Z ; std::allocator<SomeClass *>::deallocate
PUBLIC	?capacity@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@QBEIXZ ; std::vector<SomeClass *,std::allocator<SomeClass *> >::capacity
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<SomeClass *,std::allocator<SomeClass *> > >::_Getal
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@@std@@QBEABQAPAVSomeClass@@XZ ; std::_Vector_alloc<std::_Vec_base_types<SomeClass *,std::allocator<SomeClass *> > >::_Myend
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@std@@QAEPAPAVSomeClass@@I@Z ; std::_Wrap_alloc<std::allocator<SomeClass *> >::allocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<SomeClass *> >::max_size
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVSomeClass@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVSomeClass@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<SomeClass *> >,std::_Vector_val<std::_Simple_types<SomeClass *> >,1>::_Get_second
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	?_Unused_capacity@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@QBEIXZ ; std::vector<SomeClass *,std::allocator<SomeClass *> >::_Unused_capacity
PUBLIC	?max_size@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@QBEIXZ ; std::vector<SomeClass *,std::allocator<SomeClass *> >::max_size
PUBLIC	?_Grow_to@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@IBEII@Z ; std::vector<SomeClass *,std::allocator<SomeClass *> >::_Grow_to
PUBLIC	?_Reallocate@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@IAEXI@Z ; std::vector<SomeClass *,std::allocator<SomeClass *> >::_Reallocate
PUBLIC	?_Xlen@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@IBEXXZ ; std::vector<SomeClass *,std::allocator<SomeClass *> >::_Xlen
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<SomeClass *,std::allocator<SomeClass *> > >::_Orphan_all
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVSomeClass@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<SomeClass *,std::allocator<SomeClass *> > >::_Get_data
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@std@@QAEXPAPAVSomeClass@@I@Z ; std::_Wrap_alloc<std::allocator<SomeClass *> >::deallocate
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVSomeClass@@@std@@@std@@@std@@QAE@PAPAVSomeClass@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SomeClass *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SomeClass *> > >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVSomeClass@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<SomeClass *> >,std::_Vector_val<std::_Simple_types<SomeClass *> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVSomeClass@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVSomeClass@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<SomeClass *> >,std::_Vector_val<std::_Simple_types<SomeClass *> >,1>::_Get_second
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??0?$allocator@PAVSomeClass@@@std@@QAE@XZ	; std::allocator<SomeClass *>::allocator<SomeClass *>
PUBLIC	?_Make_iter@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVSomeClass@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVSomeClass@@@std@@@std@@@2@@Z ; std::vector<SomeClass *,std::allocator<SomeClass *> >::_Make_iter
PUBLIC	?_Destroy@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@IAEXPAPAVSomeClass@@0@Z ; std::vector<SomeClass *,std::allocator<SomeClass *> >::_Destroy
PUBLIC	?_Inside@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@IBE_NPBQAVSomeClass@@@Z ; std::vector<SomeClass *,std::allocator<SomeClass *> >::_Inside
PUBLIC	?_Reserve@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@IAEXI@Z ; std::vector<SomeClass *,std::allocator<SomeClass *> >::_Reserve
PUBLIC	?_Tidy@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@IAEXXZ ; std::vector<SomeClass *,std::allocator<SomeClass *> >::_Tidy
PUBLIC	?_Xran@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@IBEXXZ ; std::vector<SomeClass *,std::allocator<SomeClass *> >::_Xran
PUBLIC	?_Orphan_range@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@IBEXPAPAVSomeClass@@0@Z ; std::vector<SomeClass *,std::allocator<SomeClass *> >::_Orphan_range
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVSomeClass@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<SomeClass *,std::allocator<SomeClass *> > >::_Vector_alloc<std::_Vec_base_types<SomeClass *,std::allocator<SomeClass *> > >
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVSomeClass@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<SomeClass *,std::allocator<SomeClass *> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVSomeClass@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<SomeClass *,std::allocator<SomeClass *> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@@std@@QAEAAPAPAVSomeClass@@XZ ; std::_Vector_alloc<std::_Vec_base_types<SomeClass *,std::allocator<SomeClass *> > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@@std@@QBEABQAPAVSomeClass@@XZ ; std::_Vector_alloc<std::_Vec_base_types<SomeClass *,std::allocator<SomeClass *> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@@std@@QAEAAPAPAVSomeClass@@XZ ; std::_Vector_alloc<std::_Vec_base_types<SomeClass *,std::allocator<SomeClass *> > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@@std@@QBEABQAPAVSomeClass@@XZ ; std::_Vector_alloc<std::_Vec_base_types<SomeClass *,std::allocator<SomeClass *> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@@std@@QAEAAPAPAVSomeClass@@XZ ; std::_Vector_alloc<std::_Vec_base_types<SomeClass *,std::allocator<SomeClass *> > >::_Myend
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVSomeClass@@@std@@@std@@@std@@QAE@PAPAVSomeClass@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SomeClass *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<SomeClass *> > >
PUBLIC	??0?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@QAE@XZ ; std::vector<SomeClass *,std::allocator<SomeClass *> >::vector<SomeClass *,std::allocator<SomeClass *> >
PUBLIC	?push_back@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@QAEX$$QAPAVSomeClass@@@Z ; std::vector<SomeClass *,std::allocator<SomeClass *> >::push_back
PUBLIC	??1?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@QAE@XZ ; std::vector<SomeClass *,std::allocator<SomeClass *> >::~vector<SomeClass *,std::allocator<SomeClass *> >
PUBLIC	?begin@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVSomeClass@@@std@@@std@@@2@XZ ; std::vector<SomeClass *,std::allocator<SomeClass *> >::begin
PUBLIC	?size@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@QBEIXZ ; std::vector<SomeClass *,std::allocator<SomeClass *> >::size
PUBLIC	?at@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@QAEAAPAVSomeClass@@I@Z ; std::vector<SomeClass *,std::allocator<SomeClass *> >::at
PUBLIC	??A?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@QAEAAPAVSomeClass@@I@Z ; std::vector<SomeClass *,std::allocator<SomeClass *> >::operator[]
PUBLIC	?erase@?$vector@PAVSomeClass@@V?$allocator@PAVSomeClass@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVSomeClass@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVSomeClass@@@std@@@std@@@2@@Z ; std::vector<SomeClass *,std::allocator<SomeClass *> >::erase
PUBLIC	??_GVectorOptimizationTest@@QAEPAXI@Z		; VectorOptimizationTest::`scalar deleting destructor'
PUBLIC	_main
PUBLIC	?GetIdxRaw@VectorOptimizationTest@@QAEIXZ	; VectorOptimizationTest::GetIdxRaw
PUBLIC	?GetIdxAt@VectorOptimizationTest@@QAEIXZ	; VectorOptimizationTest::GetIdxAt
PUBLIC	??1VectorOptimizationTest@@QAE@XZ		; VectorOptimizationTest::~VectorOptimizationTest
PUBLIC	??0VectorOptimizationTest@@QAE@I@Z		; VectorOptimizationTest::VectorOptimizationTest
PUBLIC	?GetX@SomeClass@@QAEDXZ				; SomeClass::GetX
PUBLIC	??0SomeClass@@QAE@XZ				; SomeClass::SomeClass
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	?_Orphan_all@_Container_base0@std@@QAEXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	??2@YAPAXIPAX@Z					; operator new
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0VectorOptimizationTest@@QAE@I@Z DQ 00000000119930522r ; 2.33398e-314
	DD	FLAT:__unwindtable$??0VectorOptimizationTest@@QAE@I@Z
	DQ	00000000000000000r		; 0
	DQ	00000000000000000r		; 0
	DQ	00000000100000000r		; 2.122e-314
__unwindtable$??0VectorOptimizationTest@@QAE@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VectorOptimizationTest@@QAE@I@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$_main DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$_main
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$_main DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_main$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DQ 00000000119930522r ; 2.33398e-314
	DD	FLAT:__unwindtable$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	DQ	00000000000000000r		; 0
	DQ	00000000000000000r		; 0
	DQ	00000000500000000r		; 1.061e-313
__unwindtable$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DQ 00000000119930522r ; 2.33398e-314
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	DQ	00000000000000000r		; 0
	DQ	00000000000000000r		; 0
	DQ	00000000100000000r		; 2.122e-314
__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DQ 00000000019930522r ; 2.11987e-315
	DQ	00000000000000000r		; 0
	DQ	00000000000000000r		; 0
	DQ	00000000000000000r		; 0
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DQ 00000000619930522r ; 1.2944e-313
	DD	FLAT:__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DQ	00000000000000000r		; 0
	DQ	00000000100000000r		; 2.122e-314
__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2
	DQ	00000000000000001r		; 4.94066e-324
	DQ	00000000000000001r		; 4.94066e-324
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$8
	DD	04H
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$9
__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DQ 00000000200000002r ; 4.24399e-314
	DQ	00000000100000003r		; 2.122e-314
	DD	FLAT:__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$10
__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$10 DQ 00000000000000040r ; 3.16202e-322
	DD	00H
	DD	FLAT:__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0
xdata$x	ENDS
; Function compile flags: /Ogtp
; File d:\development\projects\optimizationtest\main.cxx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File d:\development\projects\optimizationtest\main.cxx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File d:\development\projects\optimizationtest\main.cxx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File d:\development\projects\optimizationtest\main.cxx
;	COMDAT ?GetIdxAt@VectorOptimizationTest@@QAEIXZ
_TEXT	SEGMENT
?GetIdxAt@VectorOptimizationTest@@QAEIXZ PROC		; VectorOptimizationTest::GetIdxAt, COMDAT
; _this$dead$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	ecx, DWORD PTR ?test@@3PAVVectorOptimizationTest@@A ; test

; 45   : 		for (size_t i = 0; i < someVector.size(); ++i)

	xor	eax, eax
	push	esi
	push	edi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1179 : 		return (this->_Mylast() - this->_Myfirst());

	mov	edx, DWORD PTR [ecx+4]
	mov	esi, edx
	mov	edi, DWORD PTR [ecx]
	sub	esi, edi
	sar	esi, 2
; File d:\development\projects\optimizationtest\main.cxx

; 45   : 		for (size_t i = 0; i < someVector.size(); ++i)

	test	esi, esi
	je	SHORT $LN3@GetIdxAt
	sub	edx, edi
	sar	edx, 2
$LL4@GetIdxAt:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1206 : 		if (size() <= _Pos)

	cmp	edx, eax
	jbe	SHORT $LN68@GetIdxAt
; File d:\development\projects\optimizationtest\main.cxx

; 16   : 		return x;

	mov	ecx, DWORD PTR [edi+eax*4]

; 46   : 		{
; 47   : 			if (someVector.at(i)->GetX() == 0x15)

	cmp	BYTE PTR [ecx], 21			; 00000015H
	je	SHORT $LN1@GetIdxAt

; 45   : 		for (size_t i = 0; i < someVector.size(); ++i)

	inc	eax
	cmp	eax, esi
	jb	SHORT $LL4@GetIdxAt
$LN3@GetIdxAt:

; 48   : 			{
; 49   : 				return i;
; 50   : 			}
; 51   : 		}
; 52   : 		return (size_t)-1;

	or	eax, -1
$LN1@GetIdxAt:
	pop	edi
	pop	esi

; 53   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
$LN68@GetIdxAt:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1789 : 		_Xout_of_range("invalid vector<T> subscript");

	push	OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN75@GetIdxAt:
$LN74@GetIdxAt:
	int	3
?GetIdxAt@VectorOptimizationTest@@QAEIXZ ENDP		; VectorOptimizationTest::GetIdxAt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\development\projects\optimizationtest\main.cxx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File d:\development\projects\optimizationtest\main.cxx
;	COMDAT ?GetIdxRaw@VectorOptimizationTest@@QAEIXZ
_TEXT	SEGMENT
?GetIdxRaw@VectorOptimizationTest@@QAEIXZ PROC		; VectorOptimizationTest::GetIdxRaw, COMDAT
; _this$dead$ = ecx

; 56   : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	ecx, DWORD PTR ?test@@3PAVVectorOptimizationTest@@A ; test

; 57   : 		for (size_t i = 0; i < someVector.size(); ++i)

	xor	eax, eax
	push	esi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1179 : 		return (this->_Mylast() - this->_Myfirst());

	mov	esi, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [ecx]
	sub	esi, edx
	sar	esi, 2
; File d:\development\projects\optimizationtest\main.cxx

; 57   : 		for (size_t i = 0; i < someVector.size(); ++i)

	test	esi, esi
	je	SHORT $LN3@GetIdxRaw
	npad	5
$LL4@GetIdxRaw:

; 16   : 		return x;

	mov	ecx, DWORD PTR [edx]

; 58   : 		{
; 59   : 			if (someVector[i]->GetX() == 0x15)

	cmp	BYTE PTR [ecx], 21			; 00000015H
	je	SHORT $LN1@GetIdxRaw

; 57   : 		for (size_t i = 0; i < someVector.size(); ++i)

	inc	eax
	add	edx, 4
	cmp	eax, esi
	jb	SHORT $LL4@GetIdxRaw
$LN3@GetIdxRaw:

; 60   : 			{
; 61   : 				return i;
; 62   : 			}
; 63   : 		}
; 64   : 		return (size_t)-1;

	or	eax, -1
$LN1@GetIdxRaw:
	pop	esi

; 65   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetIdxRaw@VectorOptimizationTest@@QAEIXZ ENDP		; VectorOptimizationTest::GetIdxRaw
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\development\projects\optimizationtest\main.cxx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File d:\development\projects\optimizationtest\main.cxx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File d:\development\projects\optimizationtest\main.cxx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File d:\development\projects\optimizationtest\main.cxx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File d:\development\projects\optimizationtest\main.cxx
;	COMDAT _main
_TEXT	SEGMENT
$T1 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_main	PROC						; COMDAT

; 71   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$_main
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 72   : 	test = new VectorOptimizationTest(0x100);

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??0VectorOptimizationTest@@QAE@I@Z	; VectorOptimizationTest::VectorOptimizationTest
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 45   : 		for (size_t i = 0; i < someVector.size(); ++i)

	xor	ecx, ecx

; 72   : 	test = new VectorOptimizationTest(0x100);

	mov	DWORD PTR ?test@@3PAVVectorOptimizationTest@@A, eax ; test
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1179 : 		return (this->_Mylast() - this->_Myfirst());

	mov	edx, DWORD PTR [eax+4]
	mov	esi, edx
	mov	edi, DWORD PTR [eax]
	sub	esi, edi
	sar	esi, 2
; File d:\development\projects\optimizationtest\main.cxx

; 45   : 		for (size_t i = 0; i < someVector.size(); ++i)

	test	esi, esi
	je	SHORT $LN12@main
	sub	edx, edi
	sar	edx, 2
$LL13@main:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1206 : 		if (size() <= _Pos)

	cmp	edx, ecx
	jbe	$LN125@main
; File d:\development\projects\optimizationtest\main.cxx

; 16   : 		return x;

	mov	eax, DWORD PTR [edi+ecx*4]

; 46   : 		{
; 47   : 			if (someVector.at(i)->GetX() == 0x15)

	cmp	BYTE PTR [eax], 21			; 00000015H
	je	SHORT $LN10@main

; 45   : 		for (size_t i = 0; i < someVector.size(); ++i)

	inc	ecx
	cmp	ecx, esi
	jb	SHORT $LL13@main
$LN12@main:

; 48   : 			{
; 49   : 				return i;
; 50   : 			}
; 51   : 		}
; 52   : 		return (size_t)-1;

	or	ecx, -1
$LN10@main:

; 73   : 	{
; 74   : 		std::cout << "<<< AT  : " << test->GetIdxAt()  << " >>>" << std::endl;

	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	ecx
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	mov	edx, OFFSET ??_C@_0L@FNFMFEBM@?$DM?$DM?$DM?5AT?5?5?3?5?$AA@
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
	mov	edx, OFFSET ??_C@_04IHNIHLJD@?5?$DO?$DO?$DO?$AA@
	mov	ecx, eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z

; 75   : 		std::cout << "<<< RAW : " << test->GetIdxRaw() << " >>>" << std::endl;

	mov	eax, DWORD PTR ?test@@3PAVVectorOptimizationTest@@A ; test

; 57   : 		for (size_t i = 0; i < someVector.size(); ++i)

	xor	ecx, ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1179 : 		return (this->_Mylast() - this->_Myfirst());

	mov	esi, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax]
	sub	esi, edx
	sar	esi, 2
; File d:\development\projects\optimizationtest\main.cxx

; 57   : 		for (size_t i = 0; i < someVector.size(); ++i)

	test	esi, esi
	je	SHORT $LN79@main
	npad	1
$LL80@main:

; 16   : 		return x;

	mov	eax, DWORD PTR [edx]

; 58   : 		{
; 59   : 			if (someVector[i]->GetX() == 0x15)

	cmp	BYTE PTR [eax], 21			; 00000015H
	je	SHORT $LN77@main

; 57   : 		for (size_t i = 0; i < someVector.size(); ++i)

	inc	ecx
	add	edx, 4
	cmp	ecx, esi
	jb	SHORT $LL80@main
$LN79@main:

; 60   : 			{
; 61   : 				return i;
; 62   : 			}
; 63   : 		}
; 64   : 		return (size_t)-1;

	or	ecx, -1
$LN77@main:

; 75   : 		std::cout << "<<< RAW : " << test->GetIdxRaw() << " >>>" << std::endl;

	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	ecx
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	mov	edx, OFFSET ??_C@_0L@BDIDHNLI@?$DM?$DM?$DM?5RAW?5?3?5?$AA@
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
	mov	edx, OFFSET ??_C@_04IHNIHLJD@?5?$DO?$DO?$DO?$AA@
	mov	ecx, eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z

; 76   : 	}
; 77   : 	delete test;

	mov	esi, DWORD PTR ?test@@3PAVVectorOptimizationTest@@A ; test
	test	esi, esi
	je	SHORT $LL2@main
	mov	ecx, esi
	call	??1VectorOptimizationTest@@QAE@XZ	; VectorOptimizationTest::~VectorOptimizationTest
	push	12					; 0000000cH
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LL2@main:

; 78   : 	while (true);

	jmp	SHORT $LL2@main
$LN125@main:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1789 : 		_Xout_of_range("invalid vector<T> subscript");

	push	OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN148@main:
$LN147@main:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_main$0:
	push	12					; 0000000cH
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$_main:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$_main
	jmp	___CxxFrameHandler3
text$x	ENDS
_main	ENDP
END
